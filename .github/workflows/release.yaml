name: release

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout...
        uses: actions/checkout@v2

      - run: git fetch --prune --unshallow

      - name: Setup go...
        uses: actions/setup-go@v2
        with:
          go-version: "${{ env.GOLANG_VERSION }}"

      - name: branch name
        id: branch_name
        run: |
          echo ::set-output name=MAINNET::$(./script/mainnet-from-tag.sh ${GITHUB_REF#refs/tags/})
          echo ::set-output name=RELEASE_TAG::${GITHUB_REF#refs/tags/}

      - run: echo "Building for MAINNET=${{ steps.branch_name.outputs.MAINNET }}"

      - if: github.ref == 'refs/heads/master'
        name: release dry-run GORELEASER_SKIP_VALIDATE=true
        run: make release-dry-run GORELEASER_SKIP_VALIDATE=true

      - if: startsWith(github.ref,'refs/tags/v')
        name: release dry-run
        run: make release-dry-run
        env:
          RELEASE_TAG: ${{ steps.branch_name.outputs.RELEASE_TAG }}

      - if: startsWith(github.ref,'refs/tags/v') && github.repository == 'anhoder/go-musicfox'
        name: setup release environment
        run: |-
          echo 'GITHUB_TOKEN=${{secrets.GORELEASER_ACCESS_TOKEN}}' >> .release-env
      - if: startsWith(github.ref,'refs/tags/v') && github.repository == 'anhoder/go-musicfox'
        name: release publish
        run: |-
          sudo rm -rf dist
          make release
        env:
          MAINNET: ${{ steps.branch_name.outputs.MAINNET }}
          RELEASE_TAG: ${{ steps.branch_name.outputs.RELEASE_TAG }}